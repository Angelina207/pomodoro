/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_openSettings_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/openSettings.js */ \"./src/js/modules/openSettings.js\");\n/* harmony import */ var _modules_styleSettings_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/styleSettings.js */ \"./src/js/modules/styleSettings.js\");\n/* harmony import */ var _modules_timeSettings_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/timeSettings.js */ \"./src/js/modules/timeSettings.js\");\n/* harmony import */ var _modules_tabs_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/tabs.js */ \"./src/js/modules/tabs.js\");\n\r\n\r\n\r\n\r\n\r\n_modules_openSettings_js__WEBPACK_IMPORTED_MODULE_0__.openSett();\r\n_modules_styleSettings_js__WEBPACK_IMPORTED_MODULE_1__.settings();\r\n_modules_timeSettings_js__WEBPACK_IMPORTED_MODULE_2__.settings();\r\n_modules_tabs_js__WEBPACK_IMPORTED_MODULE_3__.tab();\n\n//# sourceURL=webpack://pomodoro/./src/js/app.js?");

/***/ }),

/***/ "./src/js/modules/openSettings.js":
/*!****************************************!*\
  !*** ./src/js/modules/openSettings.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"openSett\": () => (/* binding */ openSett)\n/* harmony export */ });\nfunction openSett() {\r\n    // Open & close settings\r\n   const overlay = document.querySelector('.overlay');\r\n   const settings = document.querySelector('.sec__setting');\r\n   \r\n   document.querySelector('.sett-btn').addEventListener('click', () => displaySettings());\r\n   document.querySelector('.sett-btn-close').addEventListener('click', () => closeSettings());\r\n   document.querySelector('.overlay').addEventListener('click', () => closeSettings())\r\n\r\n   function displaySettings() {\r\n        settings.classList.add('is-open');\r\n        overlay.style.display = 'block';\r\n   }\r\n\r\n   function closeSettings() {\r\n        settings.classList.remove('is-open');\r\n        overlay.style.display = 'none';\r\n   }\r\n}\n\n//# sourceURL=webpack://pomodoro/./src/js/modules/openSettings.js?");

/***/ }),

/***/ "./src/js/modules/styleSettings.js":
/*!*****************************************!*\
  !*** ./src/js/modules/styleSettings.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"settings\": () => (/* binding */ settings)\n/* harmony export */ });\nfunction settings() {\r\n   const fonts = document.getElementsByName('font');\r\n   const colors = document.getElementsByName('color');\r\n   let COLOR = getColorFromLocalStorage() || '#F87070'; // the red is default\r\n   let FONT = getFontFromLocalStorage() || 'KumbhSans'; // the 'KumbhSans' is default\r\n \r\n   function getInputValue(items) {\r\n      for (let item of items) {\r\n         item.addEventListener('change', function() {\r\n            item.name === 'color' ? localStorage.setItem('color', item.value) : localStorage.setItem('font', item.value);\r\n         })\r\n         if (item.value === COLOR) item.checked = true; \r\n         if (item.value === FONT) item.checked = true;\r\n      } \r\n   }\r\n   getInputValue(fonts)\r\n   getInputValue(colors)\r\n   \r\n   function getColorFromLocalStorage() {  // Get current color\r\n      return localStorage.getItem('color')\r\n   }\r\n   function getFontFromLocalStorage() {   // Get current font\r\n      return localStorage.getItem('font')\r\n   }\r\n\r\n   // Change color elements\r\n   function changeCurrentTabColor() {\r\n      const tabs = document.querySelectorAll('.tab-btn');\r\n      for (let i = 0; i < tabs.length; i++) {\r\n         tabs[i].className === 'tab-btn is-active' ? tabs[i].style.background = COLOR : tabs[i].style.background = 'transparent';\r\n      }\r\n   }\r\n   changeCurrentTabColor()\r\n\r\n   function changeBtnColor() {\r\n      document.querySelector('.btn-apply').style.background = COLOR;\r\n   }\r\n   changeBtnColor()\r\n   \r\n   // Change pages font\r\n   function changeBodyFont () { \r\n      const body = document.querySelector('.body');\r\n      const buttons = document.querySelectorAll('button');\r\n\r\n      for (let button of buttons) {\r\n         button.style.fontFamily = `${FONT}, sans-serif`;\r\n         FONT !== 'RobotoSlab' ? button.style.fontWeight = '700' : button.style.fontWeight = '400';\r\n      }\r\n      body.style.fontFamily = `${FONT}, sans-serif`;\r\n      FONT !== 'RobotoSlab' ? body.style.fontWeight = '700' : body.style.fontWeight = '400';\r\n   }\r\n   changeBodyFont()\r\n\r\n   document.querySelector('.btn-apply').addEventListener('click', () => document.location.reload());  \r\n}\n\n//# sourceURL=webpack://pomodoro/./src/js/modules/styleSettings.js?");

/***/ }),

/***/ "./src/js/modules/tabs.js":
/*!********************************!*\
  !*** ./src/js/modules/tabs.js ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tab\": () => (/* binding */ tab)\n/* harmony export */ });\nfunction tab() {\r\n    let COLOR = getColorFromLocalStorage() || '#F87070'; // the red is default\r\n\r\n    function getColorFromLocalStorage() {\r\n        return localStorage.getItem('color')\r\n     }\r\n    function displayActiveTab(activeTab) {\r\n        const tabBtn = document.querySelectorAll('.tab-btn');\r\n\r\n        document.querySelector('.tab-btn-list').addEventListener('click', function(e) {\r\n            if (activeTab = e.target.dataset.tab) {\r\n                for (let i = 0; i < tabBtn.length; i += 1) {\r\n                    if (activeTab == i) {\r\n                        tabBtn[i].classList.add('is-active');\r\n                        tabBtn[i].style.background = COLOR;\r\n                    } else {\r\n                        tabBtn[i].classList.remove('is-active');\r\n                        tabBtn[i].style.background = 'transparent';\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n    displayActiveTab()\r\n}\n\n//# sourceURL=webpack://pomodoro/./src/js/modules/tabs.js?");

/***/ }),

/***/ "./src/js/modules/timeSettings.js":
/*!****************************************!*\
  !*** ./src/js/modules/timeSettings.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"settings\": () => (/* binding */ settings)\n/* harmony export */ });\nfunction settings() { \r\n    // Timer config    \r\n    let degree        = 360;\r\n    let progressStart = 0;\r\n    let minRem        = 0;\r\n    let secRem        = 0;\r\n    let speed         = 1000;\r\n    let progress      = null;\r\n    let COLOR         = getColorFromLocalStorage() || '#F87070';\r\n    let timerTime     = getTimerFromLocalStorage() || 45;\r\n    let minBreak      = getShortBreakFromLocalStorage() || 5;\r\n    let maxBreak      = getLongBreakFromLocalStorage() || 15;\r\n    // Timer elements\r\n    let timer          = document.querySelector('#timer');\r\n    let shortBreak     = document.querySelector('#shortBreak');\r\n    let longBreak      = document.querySelector('#longBreak');\r\n    let minutes        = document.querySelector('.timer-minutes');\r\n    let seconds        = document.querySelector('.timer-seconds');\r\n    const progressBar  = document.querySelector('.progress-bar');\r\n    const stopStartBtn = document.querySelector('.timer-start-stop-btn'); // Button Stop / Start Timer\r\n    // Tab buttons\r\n    const timerTab      = document.querySelector('#timerTab');\r\n    const shortBreakTab = document.querySelector('#shortBreakTab');\r\n    const longBreakTab  = document.querySelector('#longBreakTab');\r\n    // Timer button inc\r\n    const timerInc      = document.querySelector('#timerInc');\r\n    const shortBreakInc = document.querySelector('#shortBreakInc');\r\n    const longBreakInc  = document.querySelector('#longBreakInc');\r\n    // Timer button dec\r\n    const timerDec      = document.querySelector('#timerDec');\r\n    const shortBreakDec = document.querySelector('#shortBreakDec');\r\n    const longBreakDec  = document.querySelector('#longBreakDec');\r\n    // Display current timer bar\r\n    timerTab.addEventListener('click', () => displayCurrentTimer(timerTab, timerTime));\r\n    shortBreakTab.addEventListener('click', () => displayCurrentTimer(shortBreakTab, minBreak));\r\n    longBreakTab.addEventListener('click', () => displayCurrentTimer(longBreakTab, maxBreak));\r\n    // Start / Stop Timer\r\n    stopStartBtn.addEventListener('click', stopStartTimerBtn);\r\n    // Display time in settings\r\n    timer.innerHTML = timerTime;\r\n    shortBreak.innerHTML = minBreak;\r\n    longBreak.innerHTML = maxBreak;\r\n\r\n    function playAudio() {\r\n        let audio = new Audio();\r\n        audio.src = '../files/timeEnd.mp3';\r\n        audio.play();\r\n    }\r\n\r\n    function displayCurrentTimer(currentTab, timer) {\r\n        if (currentTab) {\r\n            minutes.innerHTML = timer < 10 ? `0${timer}` : timer;\r\n            seconds.innerHTML = `00`;\r\n        }\r\n    }\r\n    displayCurrentTimer(timerTab, timerTime)\r\n\r\n    let progressEnd = timer => {  return timer * 60   }\r\n    let moveDegree  = timer => {  return degree / progressEnd(timer)  }\r\n\r\n    function progressTrack (timer) {\r\n        progressStart++;\r\n\r\n        minRem = Math.floor((progressEnd(timer) - progressStart) / 60);\r\n        secRem = Math.floor((progressEnd(timer) - progressStart) % 60);\r\n         \r\n        minutes.innerHTML = minRem < 10 ? `0${minRem}` : minRem;\r\n        seconds.innerHTML = secRem < 10 ? `0${secRem}` : secRem;\r\n\r\n        progressBar.style.background = `conic-gradient(\r\n            ${COLOR} ${progressStart * moveDegree(timer)}deg, \r\n            #161932 ${progressStart  * moveDegree(timer)}deg)`;\r\n\r\n        if (progressStart == progressEnd(timer)) {\r\n            progressBar.style.background = `conic-gradient(\r\n                ${COLOR} 360deg,\r\n                ${COLOR} 360deg \r\n            )`;\r\n            clearInterval(progress);\r\n            stopStartBtn.innerHTML = 'RESTART';\r\n            progress = null;\r\n            progressStart = 0;\r\n            playAudio()\r\n        }\r\n    }\r\n\r\n    function stopStartProgress () {\r\n        if (!progress) {\r\n            progress = setInterval(() => progressTrack(timerTime), speed)\r\n        } else {\r\n            clearInterval(progress);\r\n            progress = null;\r\n            progressStart = 0;\r\n            progressBar.style.background = `conic-gradient(\r\n                #161932 360deg,\r\n                #161932 360deg\r\n            )`;\r\n        }\r\n    }\r\n\r\n    function stopStartTimerBtn () {\r\n        if (stopStartBtn.innerHTML === 'START') {\r\n            stopStartBtn.innerHTML = 'PAUSE';\r\n            stopStartProgress ()\r\n        }\r\n    }\r\n\r\n    function startStopProgress(currentTab) {\r\n        if (console.log(!progress && currentTab === timerTab)) { // добавить условие в каждое условие через ? : \r\n            setInterval(() => progressTrack(timerTime), speed)  // придумать условие по которому таймер либо будет запускатся, либо останавливаться\r\n        } \r\n        else  if (console.log(!progress && currentTab === shortBreakTab)) {\r\n            setInterval(() => progressTrack(minBreak), speed)\r\n        }\r\n        else {\r\n            setInterval(() => progressTrack(maxBreak), speed)\r\n            // clearInterval(progress);\r\n            // progress = null;\r\n            // progressStart = 0;\r\n            // progressBar.style.background = `conic-gradient(\r\n            //     #161932 360deg,\r\n            //     #161932 360deg\r\n            // )`;\r\n        }\r\n    }\r\n    // function resetTimer(timer) {\r\n    //     if (progress) clearInterval(progress)\r\n\r\n    //     progress = null;\r\n    //     progressStart = 0;\r\n    //     getProgressEnd(timer);\r\n    //     getDegTravel(timer);\r\n    //     progressBar.style.background = `conic-gradient(\r\n    //         #161932 360deg,\r\n    //         #161932 360deg\r\n    //     )`;\r\n    // }\r\n\r\n    function getTimerFromLocalStorage() { // Get current timer\r\n        return localStorage.getItem('timer')\r\n    }\r\n    function getShortBreakFromLocalStorage() { // Get current short break\r\n        return localStorage.getItem('shortBreak')\r\n    }\r\n    function getLongBreakFromLocalStorage() { // Get current long break\r\n        return localStorage.getItem('longBreak') \r\n    }\r\n    function getColorFromLocalStorage() {  // Get current color\r\n        return localStorage.getItem('color')\r\n     }\r\n\r\n    // Increase timer\r\n    function inreaseTimer (typeTimer, inc) {\r\n        if (typeTimer === timer) {\r\n            inc === timerInc && timerTime < 60 ? timerTime++ : timerTime = 0;\r\n            localStorage.setItem('timer', timerTime);          \r\n        } \r\n        else if (typeTimer === shortBreak) {\r\n            inc === shortBreakInc && minBreak < 15 ? minBreak++ : minBreak = 0;\r\n            localStorage.setItem('shortBreak', minBreak);\r\n        } \r\n        else {\r\n            inc === longBreakInc && maxBreak < 25 ? maxBreak++ : maxBreak = 0;\r\n            localStorage.setItem('longBreak', maxBreak);\r\n        }\r\n    }\r\n\r\n    timerInc.addEventListener('click', () => {\r\n        inreaseTimer(timer, timerInc)\r\n        timer.innerHTML = timerTime;\r\n    })\r\n    shortBreakInc.addEventListener('click', () => {\r\n        inreaseTimer(shortBreak, shortBreakInc)\r\n        shortBreak.innerHTML = minBreak;\r\n    })\r\n    longBreakInc.addEventListener('click', () => {\r\n        inreaseTimer(longBreak, longBreakInc)\r\n        longBreak.innerHTML = maxBreak;\r\n    })\r\n\r\n     // Decrease timer\r\n    function decreaseTimer (typeTimer, dec) {\r\n        if (typeTimer === timer) {\r\n            dec === timerDec && timerTime > 0 ? timerTime-- : timerTime = 60;\r\n            localStorage.setItem('timer', timerTime); \r\n        } \r\n        else if (typeTimer === shortBreak) {\r\n            dec === shortBreakDec && minBreak > 0 ? minBreak-- : minBreak = 15;\r\n            localStorage.setItem('shortBreak', minBreak);\r\n        } \r\n        else {\r\n            dec === longBreakDec && maxBreak > 0 ? maxBreak-- : maxBreak = 25;\r\n            localStorage.setItem('longBreak', maxBreak);\r\n        }\r\n    }\r\n\r\n    timerDec.addEventListener('click', () => {\r\n        decreaseTimer(timer, timerDec)\r\n        timer.innerHTML = timerTime;\r\n    })\r\n    shortBreakDec.addEventListener('click', () => {\r\n        decreaseTimer(shortBreak, shortBreakDec)\r\n        shortBreak.innerHTML = minBreak;\r\n    })\r\n    longBreakDec.addEventListener('click', () => {\r\n        decreaseTimer(longBreak, longBreakDec)\r\n        longBreak.innerHTML = maxBreak;\r\n    })\r\n} \n\n//# sourceURL=webpack://pomodoro/./src/js/modules/timeSettings.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/app.js");
/******/ 	
/******/ })()
;